// <auto-generated />
using System;
using CNABImporter.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CNABImporter.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("CNABImporter.Data.Entities.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("CNABImporter.Data.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("CNABImporter.Data.Entities.Merchant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(19)
                        .HasColumnType("nvarchar(19)");

                    b.Property<string>("OwnerName")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Merchants");
                });

            modelBuilder.Entity("CNABImporter.Data.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasMaxLength(10)
                        .HasColumnType("money");

                    b.Property<Guid>("CardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MerchantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TransactedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("ClientId");

                    b.HasIndex("MerchantId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("CNABImporter.Data.Entities.TransactionNature", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.ToTable("TransactionNatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Entrada"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Saída"
                        });
                });

            modelBuilder.Entity("CNABImporter.Data.Entities.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("TransactionNatureId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TransactionNatureId");

                    b.ToTable("TransactionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 11, 2, 12, 9, 52, 188, DateTimeKind.Utc).AddTicks(6498),
                            Description = "Débito",
                            TransactionNatureId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 11, 2, 12, 9, 52, 188, DateTimeKind.Utc).AddTicks(7917),
                            Description = "Boleto",
                            TransactionNatureId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 11, 2, 12, 9, 52, 188, DateTimeKind.Utc).AddTicks(7955),
                            Description = "Financiamento",
                            TransactionNatureId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 11, 2, 12, 9, 52, 188, DateTimeKind.Utc).AddTicks(7957),
                            Description = "Crédito",
                            TransactionNatureId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2021, 11, 2, 12, 9, 52, 188, DateTimeKind.Utc).AddTicks(7959),
                            Description = "Recebimento Empréstimo",
                            TransactionNatureId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2021, 11, 2, 12, 9, 52, 188, DateTimeKind.Utc).AddTicks(7960),
                            Description = "Vendas",
                            TransactionNatureId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2021, 11, 2, 12, 9, 52, 188, DateTimeKind.Utc).AddTicks(7962),
                            Description = "Recebimento TED",
                            TransactionNatureId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2021, 11, 2, 12, 9, 52, 188, DateTimeKind.Utc).AddTicks(7963),
                            Description = "Recebimento DOC",
                            TransactionNatureId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2021, 11, 2, 12, 9, 52, 188, DateTimeKind.Utc).AddTicks(7965),
                            Description = "Aluguel",
                            TransactionNatureId = 2
                        });
                });

            modelBuilder.Entity("CNABImporter.Data.Entities.Transaction", b =>
                {
                    b.HasOne("CNABImporter.Data.Entities.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CNABImporter.Data.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CNABImporter.Data.Entities.Merchant", "Merchant")
                        .WithMany()
                        .HasForeignKey("MerchantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CNABImporter.Data.Entities.TransactionType", "TransactionType")
                        .WithMany()
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Client");

                    b.Navigation("Merchant");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("CNABImporter.Data.Entities.TransactionType", b =>
                {
                    b.HasOne("CNABImporter.Data.Entities.TransactionNature", "TransactionNature")
                        .WithMany()
                        .HasForeignKey("TransactionNatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransactionNature");
                });
#pragma warning restore 612, 618
        }
    }
}
